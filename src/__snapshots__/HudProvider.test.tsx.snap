// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HudProvider renders correctly 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
  testID="hud-view"
>
  <View
    testID="content"
  />
</View>
`;

exports[`HudProvider renders correctly when toggling hud 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
  testID="hud-provider"
>
  <View
    testID="content"
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="show-hud-button"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="hide-hud-button"
    />
  </View>
  <View
    pointerEvents="none"
    style={
      {
        "alignItems": "center",
        "bottom": 0,
        "flex": 1,
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    testID="hud-container"
  >
    <View
      collapsable={false}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "rgba(0,0,0,0.8)",
          "borderRadius": 5,
          "height": 80,
          "justifyContent": "center",
          "opacity": 0,
          "width": 80,
        }
      }
      testID="hud-icon-container"
    >
      <View
        collapsable={false}
        style={{}}
        testID="hud-icon-wrapper"
      />
    </View>
  </View>
</View>
`;

exports[`HudProvider renders correctly when toggling hud 2`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
  testID="hud-provider"
>
  <View
    testID="content"
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="show-hud-button"
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="hide-hud-button"
    />
  </View>
</View>
`;
